 0 addi 1 16 1   // r1 = r1 + 16 // goto 17
 1 seti 1 5 5    // r5 = 1
 2 seti 1 2 3    // r3 = 1
 3 mulr 5 3 2    // r2 = r5 * r3
 4 eqrr 2 4 2    // if (r2 == r4) { r2 = 1} else { r2 = 0}
 5 addr 2 1 1    // r1 = r2 + r1 -- skip next if r2 was equal to r4, that is r4 was r3 * r5
 6 addi 1 1 1    // r1++ // (goto 8)
 7 addr 5 0 0    // r0 = r5 + r0 -- add r5 to r0 if r4 was r3 * r5, we are summing factors of r4
 8 addi 3 1 3    // r3++
 9 gtrr 3 4 2    // if (r3 > r4) { r2 = 1} else { r2 = 0} 
10 addr 1 2 1    // r1 = r1 + r2 // skip next if r3 was larger than r4 
11 seti 2 6 1    // r1 = 2 // goto 3                      
12 addi 5 1 5    // r5++
13 gtrr 5 4 2    // if (r5 > r4) { r2 = 1} else {r2 = 0}
14 addr 2 1 1    // r1 = r1 + r2 // skip next if r5 was larger than r4
15 seti 1 8 1    // r1 = 1 // goto 2
16 mulr 1 1 1    // r1 = r1 * r1 // goto 16*16 + 1 -- will run out of program area
17 addi 4 2 4    // r4 = r4 + 2  -- r4 = 2
18 mulr 4 4 4    // r4 = r4 * r4 -- r4 = 4
19 mulr 1 4 4    // r4 = 19 * r4 -- r4 = 76
20 muli 4 11 4   // r4 = r4 * 11 -- r4 = 836
21 addi 2 5 2    // r2 = r2 + 5  -- r2 = 5
22 mulr 2 1 2    // r2 = r1 * r2 -- r2 = 22 * 5 = 110
23 addi 2 12 2   // r2 = r2 + 12 -- r2 = 122
24 addr 4 2 4    // r4 = r2 + r4 -- r4 = 958, quite modest
25 addr 1 0 1    // r1 = r1 + r0 // jump over next r0 (in part 1 r0=0, in part2 r0=1)
26 seti 0 4 1    // r1 = 0 // goto 1 -- in part 1, for part 2 we keep baking r4 much bigger
27 setr 1 4 2    // r2 = r1 // r2 = 27
28 mulr 2 1 2    // r2 = r1 * r2 // r2 = 27 * 28
29 addr 1 2 2    // r2 = r1 + r2
30 mulr 1 2 2    // r2 = r1 * r2
31 muli 2 14 2   // r2 = r2 * 14
32 mulr 2 1 2    // r2 = r2 * r1
33 addr 4 2 4    // r4 = r4 + r2 // 10551358
34 seti 0 3 0    // r0 = 0
35 seti 0 7 1    // r1 = 7 -- goto 8